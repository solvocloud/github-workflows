# Common reusable workflow for PR-related events.
# A reference to this workflow should be made by other repositories, in workflows that
# deal with pull requests (i.e. having "on" -> "pull_request" in their header).
#
# The idea is to have this common workflow contain whatever jobs and steps needed for all
# PR-related events.
on:
  workflow_call: {}
jobs:
  terraform-plan:
    if: "github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'"
    permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout
      pull-requests: write
    runs-on: ubuntu-latest
    name: Create a plan for a terraform configuration
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TERRAFORM_VERSION: '>= 1.3.3, < 2.0.0'
      TERRAFORM_FOLDER: 'terraform/app'
      TERRAFORM_WORKSPACE: ${{ github.ref == 'refs/heads/main' && 'prod' || 'Dev' }}
      ENVIRONMENT_ROLE_TO_ASSUME_ARN: ${{ github.ref == 'refs/heads/main' && secrets.ORG_TERRAFORM_PLAN_PROD_ROLE_ARN || secrets.ORG_TERRAFORM_PLAN_DEV_ROLE_ARN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check if repo holding terraform code
        id: terraformCodeCheck
        run: |
          if [ -d "$TERRAFORM_FOLDER" ]; then
            echo "Found Terraform code!"
            echo "terraformCodeExists=true" >> $GITHUB_OUTPUT
          else
            echo "No Terraform code found..."
            echo "terraformCodeExists=false" >> $GITHUB_OUTPUT
          fi

      - name: Connect to AWS github identity provider
        if: steps.terraformCodeCheck.outputs.terraformCodeExists == 'true'
        uses: aws-actions/configure-aws-credentials@v2
        with:
            role-to-assume: ${{ secrets.ORG_GITHUB_ENTRY_ROOT_ACCOUNT_ROLE_ARN }}
            role-session-name: github-action-terraform-plan
            aws-region: ${{ vars.AWS_REGION }}

      - name: Configure AWS credentials for account
        if: steps.terraformCodeCheck.outputs.terraformCodeExists == 'true'
        uses: aws-actions/configure-aws-credentials@v2
        with:
            role-to-assume: ${{ env.ENVIRONMENT_ROLE_TO_ASSUME_ARN }}
            aws-region: ${{ vars.AWS_REGION }}
            role-chaining: true

      - name: terraform plan
        if: steps.terraformCodeCheck.outputs.terraformCodeExists == 'true'
        uses: dflook/terraform-plan@v1
        with:
          path: ${{ env.TERRAFORM_FOLDER }}
          workspace: ${{ env.TERRAFORM_WORKSPACE }}

  validate-jira-issue-key:
    runs-on: ubuntu-latest
    # Don't run this step if the PR is either from dev, or to main/master (or both).
    if: "!startsWith(github.head_ref, 'dependabot/') && !startsWith(github.head_ref, 'revert-') && ((github.base_ref != 'main' && github.base_ref != 'master') || (github.head_ref != 'dev'))"
    steps:
      - id: extract-issue-key-from-pr
        name: Extract issue key from PR title
        uses: solvocloud/action-extract-jira-key@1.1
        with:
          input: ${{ github.event.pull_request.title }}
      - id: extract-issue-key-from-branch
        name: Extract issue key from branch name
        uses: solvocloud/action-extract-jira-key@1.1
        with:
          input: ${{ github.head_ref }}
      - id: validate-pr-title
        name: Validate PR title
        uses: solvocloud/action-validate-jira-key@1.1
        with:
          key: ${{ steps.extract-issue-key-from-pr.outputs.issue-key }}
          jiraUrl: ${{ secrets.JIRA_URL }}
          jiraEmail: ${{ secrets.JIRA_EMAIL }}
          jiraApiToken: ${{ secrets.JIRA_API_TOKEN }}
      - id: validate-branch-name
        name: Validate branch name
        uses: solvocloud/action-validate-jira-key@1.1
        with:
          key: ${{ steps.extract-issue-key-from-branch.outputs.issue-key }}
          jiraUrl: ${{ secrets.JIRA_URL }}
          jiraEmail: ${{ secrets.JIRA_EMAIL }}
          jiraApiToken: ${{ secrets.JIRA_API_TOKEN }}
#  validate-dependabot:
#    runs-on: ubuntu-latest
#    # Don't run this step if the PR is either from dev, or to main/master (or both).
#    if: (github.base_ref != 'main' && github.base_ref != 'master') || github.head_ref != 'dev'
#    steps:
#      - id: dependabot-review
#        name: Dependabot review
#        uses: actions/dependency-review-action@v3
# Comment this out for now. This fails because we need to connect to CodeArtifact for the purpose
# of downloading third-party libraries, specifically solvo-lib. That requires an IAM user to be created.
# We'll do this soon.
#
#  test:
#    runs-on: ubuntu-latest
#    steps:
#      - id: checkout
#        name: Clone repository
#        uses: actions/checkout@v3
#      - id: setup-python
#        name: Setup Python environment
#        uses: actions/setup-python@v4
#        with:
#          python-version: '3.8'
#      - id: unit-tests
#        name: Run unit tests
#        run: |
#          python -m venv .venv
#          source .venv/bin/activate
#          pip install pytest
#          pip install -e .
#          if [ -f test-requirements.txt ]; then
#            pip install -r test-requirements.txt
#          fi
#          pytest
